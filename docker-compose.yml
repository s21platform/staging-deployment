version: '3.8'
services:
  gateway-service:
    container_name: gateway-service
    image: cr.yandex/crp0f2hu4uusc0520q40/gateway-service:develop
    ports:
      - 6050:6050
    env_file:
      - ../.env
    restart: always
    networks:
      - space_21

  auth-service:
    container_name: auth-service
    image: cr.yandex/crp0f2hu4uusc0520q40/auth-service:develop
    ports:
      - "6060:6060"
    env_file:
      - ../.env
    restart: always
    networks:
      - space_21

  school-service:
    container_name: school-service
    image: cr.yandex/crp0f2hu4uusc0520q40/school-service:develop
    ports:
      - "6021:6021"
    env_file:
      - ../.env
    restart: always
    networks:
      - space_21
    depends_on:
      - school-service-redis
      - grafana

  friends-service:
    container_name: friends-service
    image: cr.yandex/crp0f2hu4uusc0520q40/friends-service:develop
    ports:
      - "6014:6014"
    env_file:
      - ../.env
    restart: always
    depends_on:
      - friends-service-db
      - kafka
      - grafana
    networks:
      - space_21

  user-service:
    container_name: user-service
    image: cr.yandex/crp0f2hu4uusc0520q40/user-service:develop
    ports:
      - "6016:6016"
    env_file:
      - ../.env
    restart: always
    depends_on:
      - user-service-db
      - kafka
      - grafana
    networks:
      - space_21

  optionhub-service:
    container_name: optionhub-service
    image: cr.yandex/crp0f2hu4uusc0520q40/optionhub-service:develop
    ports:
      - "6025:6025"
    env_file:
      - ../.env
    restart: always
    depends_on:
      - grafana
    networks:
      - space_21

  community-service:
    container_name: community-service
    image: cr.yandex/crp0f2hu4uusc0520q40/community-service:develop
    ports:
      - "6011:6011"
    env_file:
      - ../.env
    restart: always
    depends_on:
      - community-service-db
      - grafana
    networks:
      - space_21

  avatar-service:
    container_name: avatar-service
    image: cr.yandex/crp0f2hu4uusc0520q40/avatar-service:develop
    ports:
      - "6031:6031"
    env_file:
      - ../.env
    restart: always
    depends_on:
      - avatar-service-db
      - grafana
    networks:
      - space_21

  notification-service:
    container_name: notification-service
    image: cr.yandex/crp0f2hu4uusc0520q40/notification-service:develop
    ports:
      - "6027:6027"
    env_file:
      - ../.env
    restart: always
    depends_on:
      - notification-service-db
      - kafka
      - grafana
    networks:
      - space_21
    dns:
      - 8.8.8.8
      - 8.8.4.4

  society-service:
    container_name: society-service
    image: cr.yandex/crp0f2hu4uusc0520q40/society-service:develop
    ports:
      - "6005:6005"
    env_file:
      - ../.env
    restart: always
    depends_on:
      - society-service-db
      - kafka
      - grafana
    networks:
      - space_21

  search-service:
    container_name: search-service
    image: cr.yandex/crp0f2hu4uusc0520q40/search-service:develop
    ports:
      - "6066:6066"
    env_file:
      - ../.env
    depends_on:
      - grafana
    restart: always
    networks:
      - space_21

  chat-service:
    container_name: chat-service
    image: cr.yandex/crp0f2hu4uusc0520q40/chat-service:develop
    ports:
      - "6074:6074"
    env_file:
      - ../.env
    restart: always
    depends_on:
      - grafana
    networks:
      - space_21

  advert-service:
    container_name: advert-service
    image: cr.yandex/crp0f2hu4uusc0520q40/advert-service:develop
    ports:
      - "6051:6051"
    env_file:
      - ../.env
    restart: always
    depends_on:
      - advert-service-db
      - grafana
    networks:
      - space_21

  feed-service:
    container_name: feed-service
    image: cr.yandex/crp0f2hu4uusc0520q40/feed-service:develop
    ports:
      - "6002:6002"
    env_file:
      - ../.env
    restart: always
    depends_on:
      - feed-service-db
      - grafana
    networks:
      - space_21

  staff-service:
    container_name: staff-service
    image: cr.yandex/crp0f2hu4uusc0520q40/staff-service:develop
    ports:
      - "6037:6037"
    env_file:
      - ../.env
    restart: always
    depends_on:
      - staff-service-db
      - grafana
    networks:
      - space_21

  materials-service:
    container_name: materials-service
    image: cr.yandex/crp0f2hu4uusc0520q40/materials-service:develop
    ports:
      - "6045:6045"
    env_file:
      - ../.env
    restart: always
    depends_on:
      - materials-service-db
      - grafana
    networks:
      - space_21

  chat-worker-1:
    container_name: chat-worker-1
    image: cr.yandex/crp0f2hu4uusc0520q40/chat-worker:develop
    ports:
      - "${CHAT_WORKER_PORT_1}:${CHAT_WORKER_PORT_1}"
    environment:
      CHAT_WORKER_PORT: ${CHAT_WORKER_PORT_1}
    env_file:
      - ../.env
    restart: always
    depends_on:
      - chat-worker-redis
      - grafana
    networks:
      - space_21

  front-no-design:
    container_name: front-no-design
    image: cr.yandex/crp0f2hu4uusc0520q40/front-no-design:develop
    env_file:
      - ../.env
    restart: always
    depends_on:
      - grafana
    networks:
      - space_21

  crm-front:
    container_name: crm-front
    image: cr.yandex/crp0f2hu4uusc0520q40/crm-front:develop
    env_file:
      - ../.env
    restart: always
    depends_on:
      - grafana
    networks:
      - space_21

  jarvis-bot:
    container_name: jarvis-bot
    image: cr.yandex/crp0f2hu4uusc0520q40/jarvis-bot:prod
    env_file:
      - ../.env
    restart: always
    ports:
      - "6026:6026"
    depends_on:
      - grafana
      - jarvis-bot-db
      - jarvis-bot-redis
    networks:
      - space_21

  creds:
    container_name: creds
    image: cr.yandex/crp0f2hu4uusc0520q40/creds:develop
    env_file:
      - ../.env
    restart: always
    ports:
      - "6001:6001"
    depends_on:
      - grafana
      - jarvis-bot-db
      - jarvis-bot-redis
    networks:
      - space_21

  creds-db:
    container_name: creds-db
    image: postgres:15
    environment:
      POSTGRES_USER: ${CREDS_SERVICE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${CREDS_SERVICE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${CREDS_SERVICE_POSTGRES_DB}
      PGPORT: ${CREDS_SERVICE_POSTGRES_PORT}
    ports:
      - "${CREDS_SERVICE_POSTGRES_PORT}:${CREDS_SERVICE_POSTGRES_PORT}"
    volumes:
      - creds_db_data:/var/lib/postgresql/data
    networks:
      - space_21

  friends-service-db:
    container_name: friends-service-db
    image: postgres:15
    environment:
      POSTGRES_USER: ${FRIENDS_SERVICE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${FRIENDS_SERVICE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${FRIENDS_SERVICE_POSTGRES_DB}
      PGPORT: ${FRIENDS_SERVICE_POSTGRES_PORT}
    ports:
      - "${FRIENDS_SERVICE_POSTGRES_PORT}:${FRIENDS_SERVICE_POSTGRES_PORT}"
    volumes:
      - friends_db_data:/var/lib/postgresql/data
    networks:
      - space_21

  jarvis-bot-db:
    container_name: jarvis-bot-db
    image: postgres:15
    environment:
      POSTGRES_USER: ${JARVIS_BOT_POSTGRES_USER}
      POSTGRES_PASSWORD: ${JARVIS_BOT_POSTGRES_PASSWORD}
      POSTGRES_DB: ${JARVIS_BOT_POSTGRES_DB}
      PGPORT: ${JARVIS_BOT_POSTGRES_PORT}
    ports:
      - "${JARVIS_BOT_POSTGRES_PORT}:${JARVIS_BOT_POSTGRES_PORT}"
    volumes:
      - jarvis_db_data:/var/lib/postgresql/data
    restart: always
    networks:
      - space_21

  user-service-db:
    container_name: user-service-db
    image: postgres:15
    environment:
      POSTGRES_USER: ${USER_SERVICE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${USER_SERVICE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${USER_SERVICE_POSTGRES_DB}
      PGPORT: ${USER_SERVICE_POSTGRES_PORT}
    ports:
      - "${USER_SERVICE_POSTGRES_PORT}:${USER_SERVICE_POSTGRES_PORT}"
    volumes:
      - user_db_data:/var/lib/postgresql/data
    networks:
      - space_21

  community-service-db:
    container_name: community-service-db
    image: postgres:15
    environment:
      POSTGRES_USER: ${COMMUNITY_SERVICE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${COMMUNITY_SERVICE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${COMMUNITY_SERVICE_POSTGRES_DB}
      PGPORT: ${COMMUNITY_SERVICE_POSTGRES_PORT}
    ports:
      - "${COMMUNITY_SERVICE_POSTGRES_PORT}:${COMMUNITY_SERVICE_POSTGRES_PORT}"
    volumes:
      - community_db_data:/var/lib/postgresql/data
    networks:
      - space_21

  avatar-service-db:
    container_name: avatar-service-db
    image: postgres:15
    environment:
      POSTGRES_USER: ${AVATAR_SERVICE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${AVATAR_SERVICE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${AVATAR_SERVICE_POSTGRES_DB}
      PGPORT: ${AVATAR_SERVICE_POSTGRES_PORT}
    ports:
      - "${AVATAR_SERVICE_POSTGRES_PORT}:${AVATAR_SERVICE_POSTGRES_PORT}"
    volumes:
      - avatar_db_data:/var/lib/postgresql/data
    networks:
      - space_21

  notification-service-db:
    container_name: notification-service-db
    image: postgres:15
    environment:
      POSTGRES_USER: ${NOTIFICATION_SERVICE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${NOTIFICATION_SERVICE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${NOTIFICATION_SERVICE_POSTGRES_DB}
      PGPORT: ${NOTIFICATION_SERVICE_POSTGRES_PORT}
    ports:
      - "${NOTIFICATION_SERVICE_POSTGRES_PORT}:${NOTIFICATION_SERVICE_POSTGRES_PORT}"
    volumes:
      - notification_db_data:/var/lib/postgresql/data
    networks:
      - space_21

  optionhub-service-db:
    container_name: optionhub-service-db
    image: postgres:15
    environment:
      POSTGRES_USER: ${OPTIONHUB_SERVICE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${OPTIONHUB_SERVICE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${OPTIONHUB_SERVICE_POSTGRES_DB}
      PGPORT: ${OPTIONHUB_SERVICE_POSTGRES_PORT}
    ports:
      - "${OPTIONHUB_SERVICE_POSTGRES_PORT}:${OPTIONHUB_SERVICE_POSTGRES_PORT}"
    volumes:
      - optionhub_db_data:/var/lib/postgresql/data
    networks:
      - space_21

  society-service-db:
    container_name: society-service-db
    image: postgres:15
    environment:
      POSTGRES_USER: ${SOCIETY_SERVICE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${SOCIETY_SERVICE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${SOCIETY_SERVICE_POSTGRES_DB}
      PGPORT: ${SOCIETY_SERVICE_POSTGRES_PORT}
    ports:
      - "${SOCIETY_SERVICE_POSTGRES_PORT}:${SOCIETY_SERVICE_POSTGRES_PORT}"
    volumes:
      - society_db_data:/var/lib/postgresql/data
    networks:
      - space_21

  chat-service-db:
    container_name: chat-service-db
    image: postgres:15
    environment:
      POSTGRES_USER: ${CHAT_SERVICE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${CHAT_SERVICE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${CHAT_SERVICE_POSTGRES_DB}
      PGPORT: ${CHAT_SERVICE_POSTGRES_PORT}
    ports:
      - "${CHAT_SERVICE_POSTGRES_PORT}:${CHAT_SERVICE_POSTGRES_PORT}"
    volumes:
      - chat_db_data:/var/lib/postgresql/data
    networks:
      - space_21

  advert-service-db:
    container_name: advert-service-db
    image: postgres:15
    environment:
      POSTGRES_USER: ${ADVERT_SERVICE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${ADVERT_SERVICE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${ADVERT_SERVICE_POSTGRES_DB}
      PGPORT: ${ADVERT_SERVICE_POSTGRES_PORT}
    ports:
      - "${ADVERT_SERVICE_POSTGRES_PORT}:${ADVERT_SERVICE_POSTGRES_PORT}"
    volumes:
      - advert_db_data:/var/lib/postgresql/data
    networks:
      - space_21

  feed-service-db:
    container_name: feed-service-db
    image: postgres:15
    environment:
      POSTGRES_USER: ${FEED_SERVICE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${FEED_SERVICE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${FEED_SERVICE_POSTGRES_DB}
      PGPORT: ${FEED_SERVICE_POSTGRES_PORT}
    ports:
      - "${FEED_SERVICE_POSTGRES_PORT}:${FEED_SERVICE_POSTGRES_PORT}"
    volumes:
      - feed_db_data:/var/lib/postgresql/data
    networks:
      - space_21

  staff-service-db:
    container_name: staff-service-db
    image: postgres:15
    environment:
      POSTGRES_USER: ${STAFF_SERVICE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${STAFF_SERVICE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${STAFF_SERVICE_POSTGRES_DB}
      PGPORT: ${STAFF_SERVICE_POSTGRES_PORT}
    ports:
      - "${STAFF_SERVICE_POSTGRES_PORT}:${STAFF_SERVICE_POSTGRES_PORT}"
    volumes:
      - staff_db_data:/var/lib/postgresql/data
    networks:
      - space_21

  auth-service-db:
    container_name: auth-service-db
    image: postgres:15
    environment:
      POSTGRES_USER: ${AUTH_SERVICE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${AUTH_SERVICE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${AUTH_SERVICE_POSTGRES_DB}
      PGPORT: ${AUTH_SERVICE_POSTGRES_PORT}
    ports:
      - "${AUTH_SERVICE_POSTGRES_PORT}:${AUTH_SERVICE_POSTGRES_PORT}"
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    networks:
      - space_21

  materials-service-db:
    container_name: materials-service-db
    image: postgres:15
    environment:
      POSTGRES_USER: ${MATERIALS_SERVICE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${MATERIALS_SERVICE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${MATERIALS_SERVICE_POSTGRES_DB}
      PGPORT: ${MATERIALS_SERVICE_POSTGRES_PORT}
    ports:
      - "${MATERIALS_SERVICE_POSTGRES_PORT}:${MATERIALS_SERVICE_POSTGRES_PORT}"
    volumes:
      - materials_db_data:/var/lib/postgresql/data
    networks:
      - space_21

  school-service-redis:
    container_name: school-service-redis
    image: redis:alpine
    ports:
      - "6033:6379"
    volumes:
      - school-redis:/data
    networks:
      - space_21

  community-service-redis:
    container_name: community-service-redis
    image: redis:alpine
    ports:
      - "6036:6379"
    volumes:
      - community-redis:/data
    networks:
      - space_21

  jarvis-bot-redis:
    container_name: jarvis-bot-redis
    image: redis:alpine
    ports:
      - "6089:6379"
    volumes:
      - jarvis-redis:/data
    restart: always
    networks:
      - space_21

  chat-worker-redis:
    container_name: chat-worker-redis
    image: redis:alpine
    ports:
      - "6034:6379"
    volumes:
      - chat-redis:/data
    networks:
      - space_21

#  zookeeper:
#    image: bitnami/zookeeper:latest
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes
#    networks:
#      - space_21
#
#  kafka:
#    image: wurstmeister/kafka:latest
#    container_name: kafka
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      ALLOW_PLAINTEXT_LISTENER: "yes"
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
#      KAFKA_CREATE_TOPICS: "${FRIENDS_EMAIL_INVITE}:1:1"
#    depends_on:
#      - zookeeper
#    networks:
#      - space_21
#    volumes:
#      - kafka_data:/var/lib/kafka/data

# пока что использую то же имя - kafka Планируется, что при переходе в кубер все поправится
  kafka:
    image: redpandadata/redpanda:latest
    container_name: kafka
    ports:
      - "9092:9092"   # Kafka API
      - "9644:9644"   # Admin API (для rpk и мониторинга)
    volumes:
      - redpanda-data:/var/lib/redpanda/data
    networks:
      - space_21
    command:
      - redpanda
      - start
      - --overprovisioned
      - --smp
      - "1"
      - --memory
      - "1G"
      - --reserve-memory
      - "0M"
      - --mode
      - "dev-container"
      - --node-id
      - "0"
      - --check=false
      - --pandaproxy-addr
      - PLAINTEXT://0.0.0.0:8082
      - --advertise-pandaproxy-addr
      - PLAINTEXT://kafka:8082
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://kafka:9092

#  dwh-broker:
#    image: redpandadata/redpanda:latest
#    container_name: dwh-broker
#    ports:
#      - "9192:9092"   # Kafka API
#      - "9744:9644"   # Admin API (для rpk и мониторинга)
#    volumes:
#      - dwh-broker-data:/var/lib/redpanda/data
#    networks:
#      - space_21
#    command:
#      - redpanda
#      - start
#      - --seeds kafka:33145,dwh-broker:33145
#      - --overprovisioned
#      - --smp
#      - "1"
#      - --memory
#      - "1G"
#      - --reserve-memory
#      - "0M"
#      - --node-id
#      - "1"
#      - --check=false
#      - --kafka-addr
#      - PLAINTEXT://0.0.0.0:9092
#      - --advertise-kafka-addr
#      - PLAINTEXT://dwh-broker:9092
#      - --rpc-addr
#      - PLAINTEXT://0.0.0.0:33145
#      - --advertise-rpc-addr
#      - PLAINTEXT://dwh-broker:33145


  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: redpanda-console
    ports:
      - "18080:8080"
    environment:
      KAFKA_BROKERS: kafka:9092 #,dwh-broker:9092
    depends_on:
      - kafka
      #- dwh-broker
    networks:
      - space_21

  debezuim:
    image: debezium/connect:2.5
    container_name: debezium
    depends_on:
      - kafka
    ports:
      - 8083:8083
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=debezium-group
      - CONFIG_STORAGE_TOPIC=connect-configs
      - OFFSET_STORAGE_TOPIC=connect-offsets
      - STATUS_STORAGE_TOPIC=connect-status
      - KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=false
      - CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false
      - CONNECT_REST_ADVERTISED_HOST_NAME=connect
      - CONNECT_PLUGIN_PATH=/kafka/connect,/usr/share/java
      - CONNECT_LOG4J_ROOT_LOGLEVEL=INFO
    networks:
      - space_21

  elasticsearch:
    image: bitnami/elasticsearch:8.17.3
    container_name: elasticsearch
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    ports:
     - "9200:9200"
    networks:
     - space_21
    volumes:
     - elasticsearch_data:/var/lib/elasticsearch
  kibana:
    image: bitnami/kibana:8.17.3
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - space_21

  graphite:
    image: graphiteapp/graphite-statsd
    container_name: graphite
    ports:
      - "2003:2003"  # TCP порт для отправки метрик (Carbon)
      - "2004:2004"
      - "7002:7002"  # Carbon порт
      - "8125:8125/udp"  # Порт для StatsD (UDP)
      - "8126:8126"  # Порт для StatsD (TCP)
#      - "3001:80"      # Web интерфейс Graphite
    volumes:
      - graphite_data:/opt/graphite/storage
      - ./statsd.js:/opt/statsd/config/upd.js
    environment:
      - GRAPHITE_STORAGE_DIR=/opt/graphite/storage
    networks:
      - space_21

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"  # Web интерфейс Grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Пароль администратора
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - graphite
      - loki
    networks:
      - space_21

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - space_21

  backstage-db:
    container_name: backstage-db
    image: postgres:15
    environment:
      POSTGRES_USER: ${BACKSTAGE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${BACKSTAGE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${BACKSTAGE_POSTGRES_DB}
    ports:
      - "8900:5432"
    volumes:
      - backstage_db_data:/var/lib/postgresql/data
    networks:
      - space_21

  backstage:
    image: cr.yandex/crp0f2hu4uusc0520q40/backstage
    ports:
      - "7007:7007"
      - "3005:3000"
    environment:
      NODE_ENV: production
      APP_CONFIG: /app/app-config.yaml
    depends_on:
      - backstage-db
    networks:
      - space_21

  victoriametrics:
    image: victoriametrics/victoria-metrics:v1.103.0
    container_name: victoriametrics
    ports:
      - "8428:8428"  # HTTP API (запись/чтение)
      - "2033:2003"   # Graphite input
    command:
      - "-retentionPeriod=1"  # хранить 1 месяц
      - "-graphiteListenAddr=:2003"
    restart: always
    volumes:
      - vmdata:/victoria-metrics-data
    networks:
      - space_21


volumes:
  friends_db_data:
  user_db_data:
  community_db_data:
  avatar_db_data:
  notification_db_data:
  optionhub_db_data:
  graphite_data:
  grafana_data:
  redpanda-data:
  kafka_data:
  elasticsearch_data:
  jarvis_db_data:
  school-redis:
  community-redis:
  society_db_data:
  chat_db_data:
  advert_db_data:
  feed_db_data:
  chat-redis:
  backstage_db_data:
  staff_db_data:
  materials_db_data:
  auth_db_data:
  jarvis-redis:
  creds_db_data:
  # dwh-broker-data:
  vmdata:

networks:
  space_21:
    external: true
